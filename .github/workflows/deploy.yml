name: Aplication Compile & Deploy WAR

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Obteniendo Codigo Fuente
        uses: actions/checkout@v3
        
      - name: Instalando Java
        uses: actions/setup-java@v4
        with:
            java-version: '21'
            distribution: 'oracle'

      - name: Configurando Ambiente
        env:
            PORT: ${{ secrets.PORT }}
            DB_URANUS_URL: ${{ secrets.DB_URANUS_URL }}
            DB_URANUS_USER: ${{ secrets.DB_URANUS_USER }}
            DB_URANUS_PASSWORD: ${{ secrets.DB_URANUS_PASSWORD }}
        run: |
            echo "
            # Configuracion Aplicacion
            server.port=${{ secrets.PORT }}
            spring.application.name=uranus
            spring.jpa.open-in-view=false

            # Configuracion BBDD
            spring.datasource.url=${{ secrets.DB_URANUS_URL }}
            spring.datasource.username=${{ secrets.DB_URANUS_USER }}
            spring.datasource.password=${{ secrets.DB_URANUS_PASSWORD }}
            spring.jpa.show-sql=false
            spring.jpa.hibernate.ddl-auto=update
            spring.datasource.hikari.maximum-pool-size=1
            " > ./src/main/resources/application.properties

      - name: Construyendo WAR
        run: mvn clean package

      - name: Configurando Docker
        uses: docker/setup-buildx-action@v2

      - name: Login Repositorio Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        
      - name: Build and Push Docker Image
        run: docker buildx build --platform linux/amd64,linux/arm64 --push -f Dockerfile -t markitooo/uranus_dedsec_cl:${{ secrets.APP_VERSION }} .
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Instalar kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up Kubernetes config
        run: |
          mkdir -p ~/.kube
          echo "
          apiVersion: v1
          clusters:
          - cluster:
              certificate-authority-data: ${{ secrets.KUBE_CERT_AUTH }}
              server: ${{ secrets.KUBE_API_SERVER }}
            name: cluster
          contexts:
          - context:
              cluster: cluster
              user: user
            name: context
          current-context: context
          kind: Config
          preferences: {}
          users:
          - name: user
            user:
              client-certificate-data: ${{ secrets.KUBE_CLIENT_CERT }}
              client-key-data: ${{ secrets.KUBE_CLIENT_KEY }}
          " > ~/.kube/config

      - name: Obteniendo Codigo Fuente
        uses: actions/checkout@v3

      - name: Actualizar Imagen en Deployment
        env:
          APP_VERSION: ${{ secrets.APP_VERSION }}
        run: kubectl set image deploy uranus-dedsec-cl uranus-dedsec-cl=markitooo/uranus_dedsec_cl:${{ env.APP_VERSION }} -n dedsec-corp
